@using System.Security.Claims
@using System.IdentityModel.Tokens.Jwt
@inject IHttpContextAccessor HttpContextAccessor

@{
    string? token = null;
    var session = HttpContextAccessor.HttpContext?.Session;
    if (session != null)
    {
        token = session.GetString("AccessToken");
    }
    if (string.IsNullOrEmpty(token))
    {
        token = HttpContextAccessor.HttpContext?.Request.Cookies["AccessToken"];
    }

    string userName = "Guest";
    string email = "No email available";
    string userRole = "No role assigned";

    if (!string.IsNullOrEmpty(token))
    {
        var handler = new JwtSecurityTokenHandler();
        if (handler.CanReadToken(token))
        {
            var jwtToken = handler.ReadJwtToken(token);
            var claims = jwtToken.Claims.ToDictionary(c => c.Type, c => c.Value);

            if (claims.ContainsKey("userName"))
                userName = claims["userName"];

            if (claims.ContainsKey("mail"))
                email = claims["mail"];

            if (claims.ContainsKey(ClaimTypes.Role))
                userRole = claims[ClaimTypes.Role];
        }
    }

    ViewData["UserName"] = userName;
    ViewData["Email"] = email;
    ViewData["UserRole"] = userRole;
}
